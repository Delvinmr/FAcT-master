// <auto-generated />
using System;
using FAcT.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FAcT.Migrations
{
    [DbContext(typeof(FAcTContext))]
    [Migration("20200605020758_art")]
    partial class art
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FAcT.Models.Articulos", b =>
                {
                    b.Property<int>("articulosID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasMaxLength(20);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("Itebis")
                        .HasColumnType("decimal(18,2)")
                        .HasMaxLength(50);

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)")
                        .HasMaxLength(50);

                    b.Property<int>("marcaID")
                        .HasColumnType("int");

                    b.Property<int?>("unidaddemedidasunidaddemedisID")
                        .HasColumnType("int");

                    b.Property<int>("unidaddemedisID")
                        .HasColumnType("int");

                    b.HasKey("articulosID");

                    b.HasIndex("marcaID");

                    b.HasIndex("unidaddemedidasunidaddemedisID");

                    b.ToTable("Articulos");
                });

            modelBuilder.Entity("FAcT.Models.Marca", b =>
                {
                    b.Property<int>("marcaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasMaxLength(20);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("marcaID");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("FAcT.Models.Unidaddemedidas", b =>
                {
                    b.Property<int>("unidaddemedisID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasMaxLength(20);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("unidaddemedisID");

                    b.ToTable("Unidaddemedidas");
                });

            modelBuilder.Entity("FAcT.Models.Articulos", b =>
                {
                    b.HasOne("FAcT.Models.Marca", "marca")
                        .WithMany()
                        .HasForeignKey("marcaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FAcT.Models.Unidaddemedidas", "unidaddemedidas")
                        .WithMany()
                        .HasForeignKey("unidaddemedidasunidaddemedisID");
                });
#pragma warning restore 612, 618
        }
    }
}
